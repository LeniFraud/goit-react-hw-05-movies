{"version":3,"file":"static/js/779.7b61cbae.chunk.js","mappings":"0QAEaA,E,OAAOC,GAAAA,GAAH,+E,SCIF,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA4BR,OA1BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEjBC,EAAU,mCAAG,sGAEfR,GAAW,GAFI,UAGuBS,EAAAA,EAAAA,IACpCN,EACAG,EAAWI,QALE,mBAGPC,EAHO,EAGPA,aAHO,EAGMC,OAHN,iDAQfd,EAAWa,GARI,kDAUfT,EAAS,EAAD,IAVO,yBAYfF,GAAW,GAZI,6EAAH,qDAgBhBQ,GACD,GAAE,CAACL,KAEJE,EAAAA,EAAAA,YAAU,WACJJ,IAAOY,EAAAA,EAAAA,KACZ,GAAE,CAACZ,KAGF,gCACGF,IAAW,SAAC,KAAD,IACXF,IACC,wBACGA,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,WAArC,OACX,UAAC1B,EAAD,YACE,gBAAK2B,IAAKH,EAAaI,IAAKL,KAC5B,0BACE,mCADF,IACkBA,MAElB,uBAAIG,KACJ,uBAAID,MANKH,EADA,MAYI,KAAb,OAAPlB,QAAO,IAAPA,OAAA,EAAAA,EAASyB,UACR,uEAIP,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components';\nimport { getMovieReviews, alertOnError } from 'services';\nimport { Item } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getReviews = async () => {\n      try {\n        setLoading(true);\n        const { reviewsInfo, cancel } = await getMovieReviews(\n          movieId,\n          controller.signal\n        );\n        if (cancel) return;\n        setReviews(reviewsInfo);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) alertOnError();\n  }, [error]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, avatar_path, content, created_at }) => (\n            <Item key={id}>\n              <img src={avatar_path} alt={author} />\n              <p>\n                <b>Author:</b> {author}\n              </p>\n              <p>{created_at}</p>\n              <p>{content}</p>\n            </Item>\n          ))}\n        </ul>\n      )}\n      {reviews?.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n"],"names":["Item","styled","Reviews","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","controller","AbortController","getReviews","getMovieReviews","signal","reviewsInfo","cancel","alertOnError","map","id","author","avatar_path","content","created_at","src","alt","length"],"sourceRoot":""}