{"version":3,"file":"static/js/845.69161fa2.chunk.js","mappings":"+RAGaA,EAAMC,EAAAA,GAAAA,IAAH,gDAIHC,EAAUD,EAAAA,GAAAA,IAAH,qGAOPE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,ohB,SCRF,SAASI,IAAoB,IAAD,MACzC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,EAAgB,UAAGL,EAASG,aAAZ,aAAG,EAAgBC,KAAKE,SAASC,SAAS,WAEhEC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEWC,EAAAA,EAAAA,IAAaZ,GAFxB,OAEPa,EAFO,OAGblB,EAASkB,GAHI,gDAKbd,EAAS,EAAD,IALK,yBAObF,GAAW,GAPE,4EAAH,qDAWdc,GACD,GAAE,CAACX,KAEJU,EAAAA,EAAAA,YAAU,WACJZ,IAAOgB,EAAAA,EAAAA,KACZ,GAAE,CAAChB,IAEJ,IAAkBiB,EAQlB,OACE,4BACGnB,IAAW,SAAC,KAAD,MACTF,IACD,iCACE,SAAC,KAAD,CAAUsB,GAAIZ,EAAd,SACGG,EAAmB,iBAAmB,sBAEzC,UAACpB,EAAD,YACE,gBAAK8B,KAAKC,EAAAA,EAAAA,IAAaxB,EAAMyB,aAAcC,IAAI,kBAC/C,0BACG1B,EAAM2B,MADT,KACkB,IAAIC,KAAK5B,EAAM6B,cAAcC,cAD/C,QAGA,wCAAgBC,KAAKC,MAA2B,GAArBhC,EAAMiC,cAAjC,QACA,sCACA,uBAAIjC,EAAMkC,YACV,oCACA,wBAzBQb,EAyBMrB,EAAMqB,OAxBN,IAAlBA,EAAOc,OAAqB,YACzBd,EAAOe,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,aAyBrC,oDACA,UAAC3C,EAAD,YACE,SAACC,EAAD,CAAM0B,GAAG,OAAOX,MAAO,CAAEC,KAAMF,GAA/B,mBAGA,SAACd,EAAD,CAAM0B,GAAG,UAAUX,MAAO,CAAEC,KAAMF,GAAlC,yBAIF,SAAC,EAAA6B,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACE,SAAC,KAAD,WAMX,C","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 100px;\n  min-height: 40px;\n  color: #ffffff;\n  font-weight: 500;\n  background-color: #9a66df;\n  border-radius: 4px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    background-color: #5a2c92;\n  }\n\n  &:hover:not(.active),\n  :focus-visible:not(.active) {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieInfo, alertOnError, getPosterUrl } from 'services';\nimport { BackLink, Loader } from 'components';\nimport { Box, Wrapper, Link } from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n  const isMoviesBackLink = location.state?.from.pathname.includes('movies');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const movieInfo = await getMovieInfo(movieId);\n        setMovie(movieInfo);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) alertOnError();\n  }, [error]);\n\n  const getGenres = genres => {\n    if (genres.length === 0) return 'No genres';\n    return genres.map(({ name }) => name).join(', ');\n  };\n\n  // if (!movie) return null;\n  // const { title, poster_path, overview } = movie;\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {!!movie && (\n        <>\n          <BackLink to={backLinkHref}>\n            {isMoviesBackLink ? 'Back to Movies' : 'Back to HomePage'}\n          </BackLink>\n          <Box>\n            <img src={getPosterUrl(movie.poster_path)} alt=\"Movie poster\" />\n            <h2>\n              {movie.title} ({new Date(movie.release_date).getFullYear()})\n            </h2>\n            <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{getGenres(movie.genres)}</p>\n          </Box>\n          <h5>Additional information</h5>\n          <Wrapper>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </Wrapper>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n}\n"],"names":["Box","styled","Wrapper","Link","NavLink","MovieDetailsPage","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLinkHref","state","from","isMoviesBackLink","pathname","includes","useEffect","getMovie","getMovieInfo","movieInfo","alertOnError","genres","to","src","getPosterUrl","poster_path","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","length","map","name","join","Suspense","fallback"],"sourceRoot":""}