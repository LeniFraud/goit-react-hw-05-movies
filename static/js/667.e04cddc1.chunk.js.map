{"version":3,"file":"static/js/667.e04cddc1.chunk.js","mappings":"gRAgBe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAa,IAAIC,gBAEjBC,EAAS,mCAAG,wGAEdX,GAAW,GAFG,UAGiCY,EAAAA,EAAAA,IAC7CN,EACAX,EACAc,EAAWI,QANC,mBAGNpB,EAHM,EAGNA,OAAQI,EAHF,EAGEA,cAHF,EAGgBiB,OAHhB,uDASdC,EAAAA,EAAAA,IAActB,EAAOuB,OAAQnB,GACR,IAAjBA,EAVU,0CAUiBQ,EAAgB,KAVjC,QAWdX,GAAU,SAAAuB,GAAU,wBAAQA,IAAR,OAAuBxB,GAAvB,IACpBK,EAAgBD,GAZF,kDAcdK,EAAS,EAAD,IAdM,yBAgBdF,GAAW,GAhBG,6EAAH,qDAqBf,OADAW,IACO,kBAAMF,EAAWS,OAAjB,CAzBW,CA0BnB,GAAE,CAACvB,EAAMW,EAAOD,KAEjBG,EAAAA,EAAAA,YAAU,WACJP,IAAOkB,EAAAA,EAAAA,KACZ,GAAE,CAAClB,IAcJ,OACE,2BACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYmB,SAfO,SAAAC,GACvB,IAAMC,EAAkBD,EAAYE,OAAOC,cAC3C,GAAIF,IAAoBhB,EAAO,OAAOmB,EAAAA,EAAAA,IAAqBnB,GAE3DZ,EAAU,IACVW,EAAgB,CAAEC,MAAOgB,IACzB1B,EAAQ,GACRE,EAAgB,EACjB,IAQMC,IAAW,SAAC,KAAD,MACTN,EAAOuB,SAAU,SAAC,KAAD,CAAevB,OAAQA,EAAQiC,KAAM,KACxD7B,EAAe,KAAM,SAAC,KAAD,CAAY8B,QARb,kBAAM/B,GAAQ,SAAAgC,GAAQ,OAAIA,EAAW,CAAf,GAAtB,QAY5B,C","sources":["pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  SearchForm,\n  LoadButton,\n  MoviesGallery,\n  Loader,\n  Container,\n} from 'components';\nimport {\n  getSearchedMovies,\n  alertOnSearch,\n  alertOnRepeatedQuery,\n  alertOnError,\n} from 'services';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const controller = new AbortController();\n\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        const { movies, totalResults, cancel } = await getSearchedMovies(\n          query,\n          page,\n          controller.signal\n        );\n        if (cancel) return;\n        alertOnSearch(movies.length, totalResults);\n        if (totalResults === 0) return setSearchParams('');\n        setMovies(prevMovies => [...prevMovies, ...movies]);\n        setTotalResults(totalResults);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovies();\n    return () => controller.abort();\n  }, [page, query, setSearchParams]);\n\n  useEffect(() => {\n    if (error) alertOnError();\n  }, [error]);\n\n  const searchFormSubmit = searchQuery => {\n    const normalizedQuery = searchQuery.trim().toLowerCase();\n    if (normalizedQuery === query) return alertOnRepeatedQuery(query);\n\n    setMovies([]);\n    setSearchParams({ query: normalizedQuery });\n    setPage(1);\n    setTotalResults(0);\n  };\n\n  const onLoadMoreBtnClick = () => setPage(prevPage => prevPage + 1);\n\n  return (\n    <main>\n      <Container>\n        <SearchForm onSubmit={searchFormSubmit} />\n        {loading && <Loader />}\n        {!!movies.length && <MoviesGallery movies={movies} path={''} />}\n        {totalResults > 20 && <LoadButton onClick={onLoadMoreBtnClick} />}\n      </Container>\n    </main>\n  );\n}\n"],"names":["MoviesPage","useState","movies","setMovies","page","setPage","totalResults","setTotalResults","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","controller","AbortController","getMovies","getSearchedMovies","signal","cancel","alertOnSearch","length","prevMovies","abort","alertOnError","onSubmit","searchQuery","normalizedQuery","trim","toLowerCase","alertOnRepeatedQuery","path","onClick","prevPage"],"sourceRoot":""}