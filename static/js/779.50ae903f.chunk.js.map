{"version":3,"file":"static/js/779.50ae903f.chunk.js","mappings":"0QAEaA,E,OAAOC,GAAAA,GAAH,+E,SCIF,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfN,GAAW,GAFI,UAGWO,EAAAA,EAAAA,IAAgBJ,GAH3B,OAGTK,EAHS,OAKfV,EAAWU,GALI,gDAOfN,EAAS,EAAD,IAPO,yBASfF,GAAW,GATI,4EAAH,qDAahBM,GACD,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACJJ,IAAOQ,EAAAA,EAAAA,KACZ,GAAE,CAACR,KAGF,gCACGF,IAAW,SAAC,KAAD,IACXF,IACC,wBACGA,EAAQa,KACP,gBACEC,EADF,EACEA,GACAC,EAFF,EAEEA,OACkBC,EAHpB,EAGEC,eAAkBD,YAClBE,EAJF,EAIEA,QACAC,EALF,EAKEA,WALF,OAOE,UAACvB,EAAD,YACE,gBAAKwB,KAAKC,EAAAA,EAAAA,IAAaL,GAAcM,IAAKP,KAC1C,0BACE,mCADF,IACkBA,MAElB,uBAAI,IAAIQ,KAAKJ,GAAYK,wBACzB,uBAAIN,MANKJ,EAPb,MAmBe,KAAb,OAAPd,QAAO,IAAPA,OAAA,EAAAA,EAASyB,UACR,uEAIP,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components';\nimport { getMovieReviews, getAvatarUrl, alertOnError } from 'services';\nimport { Item } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setLoading(true);\n        const reviewsInfo = await getMovieReviews(movieId);\n        // if (reviewsInfo.length === 0) return;\n        setReviews(reviewsInfo);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) alertOnError();\n  }, [error]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews && (\n        <ul>\n          {reviews.map(\n            ({\n              id,\n              author,\n              author_details: { avatar_path },\n              content,\n              created_at,\n            }) => (\n              <Item key={id}>\n                <img src={getAvatarUrl(avatar_path)} alt={author} />\n                <p>\n                  <b>Author:</b> {author}\n                </p>\n                <p>{new Date(created_at).toLocaleDateString()}</p>\n                <p>{content}</p>\n              </Item>\n            )\n          )}\n        </ul>\n      )}\n      {reviews?.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n"],"names":["Item","styled","Reviews","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","getReviews","getMovieReviews","reviewsInfo","alertOnError","map","id","author","avatar_path","author_details","content","created_at","src","getAvatarUrl","alt","Date","toLocaleDateString","length"],"sourceRoot":""}